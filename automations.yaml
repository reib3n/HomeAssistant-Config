- id: 5edb8df3448840a28f316e4f5db8d7fe
  alias: Z_SET - WGT-Mode from input_select
  trigger:
  - platform: state
    entity_id: input_select.wgt_mode
  action:
  - service: modbus.write_register
    data_template:
      hub: WGT
      unit: 1
      address: 100
      value: "{% if is_state(\"input_select.wgt_mode\", \"Aus\") %}\n  [0]\n{%-elif
        is_state(\"input_select.wgt_mode\", \"Handbetrieb\") %}\n  [1]\n{%-elif is_state(\"input_select.wgt_mode\",
        \"Winterbetrieb\") %}\n  [2]\n{%-elif is_state(\"input_select.wgt_mode\",
        \"Sommerbetrieb\") %}\n  [3]\n{%-elif is_state(\"input_select.wgt_mode\",
        \"Sommer Abluft\") %}\n  [4]\n{%-else %}\n  [0]\n{% endif %}\n"
  mode: single
- id: 4fdd0bd14e1f4ac5af05ec5d10129414
  alias: Z_SET - WGT-Mode input_select from modbus sensor
  trigger:
  - platform: state
    entity_id: sensor.betriebsart_wgt
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.wgt_mode
      option: "{% if is_state(\"sensor.betriebsart_wgt\", \"0\") %}\n  Aus\n{%-elif
        is_state(\"sensor.betriebsart_wgt\", \"1\") %}\n  Handbetrieb\n{%-elif is_state(\"sensor.betriebsart_wgt\",
        \"2\") %}\n  Winterbetrieb\n{%-elif is_state(\"sensor.betriebsart_wgt\", \"3\")
        %}\n  Sommerbetrieb\n{%-else %}\n  Sommer Abluft\n{% endif %}\n"
  mode: single
- id: 4f0cf86c00f042269cb31c6eaeb10fdf
  alias: Z_SET - WGT-FANLevel from input_select
  trigger:
  - platform: state
    entity_id: input_select.wgt_fanlevel
  action:
  - service: modbus.write_register
    data_template:
      hub: WGT
      unit: 1
      address: 101
      value: "{% if is_state(\"input_select.wgt_fanlevel\", \"Aus\") %}\n  [0]\n{%-elif
        is_state(\"input_select.wgt_fanlevel\", \"Stufe 1\") %}\n  [1]\n{%-elif is_state(\"input_select.wgt_fanlevel\",
        \"Stufe 2\") %}\n  [2]\n{%-elif is_state(\"input_select.wgt_fanlevel\", \"Stufe
        3\") %}\n  [3]\n{%-else %}\n  [4]\n{% endif %}\n"
  mode: single
- id: 077070120e2e4f938569ca5cb19543a8
  alias: Z_SET - WGT-FANLevel input_select from modbus sensor
  trigger:
  - platform: state
    entity_id: sensor.aktuelle_luftstufe_wgt
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.wgt_fanlevel
      option: "{% if is_state(\"sensor.aktuelle_luftstufe_wgt\", \"0\") %}\n  Aus\n{%-elif
        is_state(\"sensor.aktuelle_luftstufe_wgt\", \"1\") %}\n  Stufe 1\n{%-elif
        is_state(\"sensor.aktuelle_luftstufe_wgt\", \"2\") %}\n  Stufe 2\n{%-elif
        is_state(\"sensor.aktuelle_luftstufe_wgt\", \"3\") %}\n  Stufe 3\n{%-else
        %}\n  Stufe 4\n{% endif %}\n"
  mode: single
- id: '1623677127283'
  alias: WGT - Sommersteuerung (an) (10min)
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: template
    value_template: '{{ (states(''sensor.aussentemperatur'') | float ) < (states(''sensor.temp_wohnzimmer'')
      | float) }}'
  - condition: state
    entity_id: input_boolean.wgt_sommerabluft
    state: 'off'
  action:
  - service: modbus.write_register
    data_template:
      hub: WGT
      unit: 1
      address: 100
      value:
      - 3
  mode: single
- id: '1623679629206'
  alias: WGT - Sommersteuerung (aus) (10min)
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: template
    value_template: '{{ (states(''sensor.aussentemperatur'') | float ) > (states(''sensor.temperatur_schlafzimmer'')
      | float) }}'
  action:
  - service: modbus.write_register
    data_template:
      hub: WGT
      unit: 1
      address: 100
      value:
      - 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.wgt_sommerabluft
  mode: single
- id: '1633984089879'
  alias: WGT - Temperaturw채chter Wohnzimmer AN
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: template
    value_template: '{{ (states(''sensor.temp_wohnzimmer'') | float ) < (19) }}'
  action:
  - service: modbus.write_register
    data_template:
      hub: WGT
      unit: 1
      address: 100
      value:
      - 2
  mode: single
- id: '1639928034409'
  alias: Weihnachtsbeleuchtung
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '1200'
    id: EIN_Zeit
  - platform: time
    at: '23:00:00'
    id: AUS_Zeit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: EIN_Zeit
      sequence: []
    - conditions:
      - condition: trigger
        id: AUS_Zeit
      sequence: []
    default: []
  mode: single
- id: '1639979694151'
  alias: Open - All
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: '0'
  condition:
  - condition: numeric_state
    entity_id: sensor.aussentemperatur
    above: '-1'
  action:
  - service: cover.open_cover
    target:
      label_id: rollladen_automation
    data: {}
  mode: single
- id: '1641065185674'
  alias: Close - UG - Technikraum
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_technikraum
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_technikraum
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.technikraum_low_speed
  mode: single
- id: '1641065185675'
  alias: Close - UG - Hobbyraum S체d
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_hobbyraum_sud
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_hobbyraum_sud
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.hobby_sud_low_speed
  mode: single
- id: '1641065185676'
  alias: Close - UG - Balkont체r
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.terassentur
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1300'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1300'
  - condition: state
    entity_id: binary_sensor.terassentur
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.balkontur_low_speed
  mode: single
- id: '1641065185677'
  alias: Close - UG - Hobbyraum West
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_hobbyraum_west
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_hobbyraum_west
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.hobby_west_low_speed
  mode: single
- id: '1641065185678'
  alias: Close - EG - WC
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_bad_eg
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_bad_eg
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.bad_eg_low_speed
  mode: single
- id: '1641320769609'
  alias: Close - OG - Hausgang
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '1200'
  condition: []
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.hausgang_og_low_speed
  mode: single
- id: '1641320877843'
  alias: Open - UG - Balkont체r
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.terassentur
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    from: 'off'
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.balkontur
  mode: single
- id: '1643189899102'
  alias: SET - VAR - NoDaylight
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: '0'
    id: Sonnenaufgang
  - platform: sun
    event: sunset
    offset: '0'
    id: Sonnenuntergang
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Sonnenaufgang
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.mb_env_nodaylight
    - conditions:
      - condition: trigger
        id: Sonnenuntergang
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.mb_env_nodaylight
    default: []
  mode: single
- id: '1643808353305'
  alias: Close - EG - Buro
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_buro_eg
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '3600'
  condition:
  - condition: sun
    after: sunset
    after_offset: '3600'
  - condition: state
    entity_id: binary_sensor.fenster_buro_eg
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.buro
  mode: single
- id: '1655670656038'
  alias: WGT - Modus
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.wgt_sommerabluft
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: modbus.write_register
    data:
      address: 100
      slave: 1
      hub: WGT
      value:
      - 4
  mode: single
- id: '1686488507294'
  alias: WGT - Sommersteuerung
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.aussentemperatur
    for:
      hours: 0
      minutes: 5
      seconds: 0
    above: sensor.mb_temp_wohnzimmer
    id: aussen_hoeher
  - platform: numeric_state
    entity_id: sensor.aussentemperatur
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: aussen_tiefer
    below: sensor.mb_temp_wohnzimmer
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: aussen_hoeher
      sequence:
      - service: modbus.write_register
        data_template:
          hub: WGT
          unit: 1
          address: 100
          value:
          - 0
    - conditions:
      - condition: trigger
        id: aussen_tiefer
      sequence:
      - service: modbus.write_register
        data_template:
          hub: WGT
          unit: 1
          address: 100
          value:
          - 3
  mode: single
- id: '1699107705657'
  alias: Backup to NAS
  description: ''
  trigger:
  - platform: time
    at: '12:00:00'
  condition: []
  action:
  - service: hassio.backup_full
    data:
      compressed: true
  mode: single
