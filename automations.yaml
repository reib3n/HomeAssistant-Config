- id: '1639928034409'
  alias: Weihnachtsbeleuchtung
  description: ''
  triggers:
  - event: sunset
    id: EIN_Zeit
    trigger: sun
  - at: '23:00:00'
    id: AUS_Zeit
    trigger: time
  - trigger: time
    at: 06:00:00
    id: EIN_Zeit
  - trigger: sun
    event: sunrise
    offset: 00:30:00
    id: AUS_Zeit
  conditions:
  - condition: state
    entity_id: input_boolean.weihnachtsbeleuchtung_verfugbar
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: EIN_Zeit
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.weihnachtsbeleuchtung
    - conditions:
      - condition: trigger
        id: AUS_Zeit
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.weihnachtsbeleuchtung
    default: []
  mode: single
- id: '1639979694151'
  alias: Open - All
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: '0'
  condition:
  - condition: numeric_state
    entity_id: sensor.aussentemperatur
    above: '-1'
  action:
  - service: cover.open_cover
    target:
      label_id: rollladen_automation
    data: {}
  mode: single
- id: '1641065185674'
  alias: Close - UG - Technikraum
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_technikraum
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_technikraum
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.technikraum_low_speed
  mode: single
- id: '1641065185675'
  alias: Close - UG - Hobbyraum Süd
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_hobbyraum_sud
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_hobbyraum_sud
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.hobby_sud_low_speed
  mode: single
- id: '1641065185676'
  alias: Close - UG - Balkontür
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.terassentur
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1300'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1300'
  - condition: state
    entity_id: binary_sensor.terassentur
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.balkontur_low_speed
  mode: single
- id: '1641065185677'
  alias: Close - UG - Hobbyraum West
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_hobbyraum_west
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_hobbyraum_west
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.hobby_west_low_speed
  mode: single
- id: '1641065185678'
  alias: Close - EG - WC
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_bad_eg
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '1200'
  condition:
  - condition: sun
    after: sunset
    after_offset: '1200'
  - condition: state
    entity_id: binary_sensor.fenster_bad_eg
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.bad_eg_low_speed
  mode: single
- id: '1641320769609'
  alias: Close - OG - Hausgang
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '1200'
  condition: []
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.hausgang_og_low_speed
  mode: single
- id: '1641320877843'
  alias: Open - UG - Balkontür
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.terassentur
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    from: 'off'
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.balkontur
  mode: single
- id: '1643189899102'
  alias: SET - VAR - NoDaylight
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: '0'
    id: Sonnenaufgang
  - platform: sun
    event: sunset
    offset: '0'
    id: Sonnenuntergang
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Sonnenaufgang
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.mb_env_nodaylight
    - conditions:
      - condition: trigger
        id: Sonnenuntergang
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.mb_env_nodaylight
    default: []
  mode: single
- id: '1643808353305'
  alias: Close - EG - Buro
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_buro_eg
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: sun
    event: sunset
    offset: '3600'
  condition:
  - condition: sun
    after: sunset
    after_offset: '3600'
  - condition: state
    entity_id: binary_sensor.fenster_buro_eg
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.buro
  mode: single
- id: '1718780262317'
  alias: Prevent Power Fridge OFF
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '30'
  condition:
  - condition: device
    type: is_off
    device_id: fdb7d62111ba59cfeadd758cd1ea4b35
    entity_id: 0cd9d297a3128c925fcc0be941e3c3a4
    domain: switch
  action:
  - type: turn_on
    device_id: fdb7d62111ba59cfeadd758cd1ea4b35
    entity_id: 0cd9d297a3128c925fcc0be941e3c3a4
    domain: switch
  mode: parallel
  max: 10
- id: '1719771764641'
  alias: Smart Mirror Power
  description: ''
  trigger:
  - platform: time
    at: 06:00:00
    id: Ein
  - platform: time
    at: '22:00:00'
    id: Aus
  condition:
  - condition: state
    entity_id: input_boolean.urlaubsmodus
    state: 'off'
  action:
  - if:
    - condition: trigger
      id:
      - Ein
    then:
    - service: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id:
        - switch.mb_power_smartmirror
        - switch.usw_main_smartmirror_poe
  - if:
    - condition: trigger
      id:
      - Aus
    then:
    - service: switch.turn_off
      target:
        entity_id:
        - switch.mb_power_smartmirror
        - switch.usw_main_smartmirror_poe
      data: {}
  mode: single
- id: '1719777380572'
  alias: Urlaubsmodus
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.urlaubsmodus
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition: []
  action:
  - service: switch.turn_off
    metadata: {}
    data: {}
    target:
      label_id: urlaubsmodus
  mode: single
- id: '1720557606127'
  alias: WGT - Sommersteuerung Temp
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.aussentemperatur'') | float < states(''sensor.temperatur_wohnzimmer'')
      | float }}'
    id: Lüftung an
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: template
    value_template: '{{ states(''sensor.aussentemperatur'') | float > states(''sensor.temperatur_wohnzimmer'')
      | float }}'
    id: Lüftung aus
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.sommersteuerung_luftung
    state: 'on'
  - condition: template
    value_template: '{{ states(''climate.wgtmode_template'') == "fan_only" or states(''climate.wgtmode_template'')
      == "off" or states(''climate.wgtmode_template'') == "heat" }}'
  action:
  - if:
    - condition: trigger
      id:
      - Lüftung an
    then:
    - service: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: fan_only
      target:
        entity_id: climate.wgtmode_template
  - if:
    - condition: trigger
      id:
      - Lüftung aus
    then:
    - service: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: 'off'
      target:
        entity_id: climate.wgtmode_template
  mode: single
- id: '1722603963360'
  alias: WGT - Set Fan Level Dropdown
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.aktuelle_luftstufe_wgt
  condition: []
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.aktuelle_luftstufe_wgt
      below: 1
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: Aus
      target:
        entity_id: input_select.wgt_fanlevel
  - if:
    - condition: numeric_state
      entity_id: sensor.aktuelle_luftstufe_wgt
      above: 2
      below: 4
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: Stufe 3
      target:
        entity_id: input_select.wgt_fanlevel
  - if:
    - condition: numeric_state
      entity_id: sensor.aktuelle_luftstufe_wgt
      above: 3
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: Stufe 4
      target:
        entity_id: input_select.wgt_fanlevel
  - if:
    - condition: numeric_state
      entity_id: sensor.aktuelle_luftstufe_wgt
      below: 2
      above: 0
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: Stufe 1
      target:
        entity_id: input_select.wgt_fanlevel
  - if:
    - condition: numeric_state
      entity_id: sensor.aktuelle_luftstufe_wgt
      below: 3
      above: 1
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: Stufe 2
      target:
        entity_id: input_select.wgt_fanlevel
  mode: single
- id: '1722606836815'
  alias: WGT - Set Climate Mode from WGT
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.betriebsart_wgt
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: and
    conditions:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.wgtmode_template
        state: cool
      enabled: false
    - condition: template
      value_template: '{{ (states(''sensor.betriebsart_wgt'') == ''0'' and states(''climate.wgtmode_template'')
        != ''off'' ) or (states(''sensor.betriebsart_wgt'') == ''2'' and states(''climate.wgtmode_template'')
        != ''heat'' ) or


        (states(''sensor.betriebsart_wgt'') == ''3'' and ( (states(''climate.wgtmode_template'')
        != ''fan_only'' and states(''climate.wgtmode_template'') == ''cool'') or (states(''climate.wgtmode_template'')
        == ''fan_only'' and states(''climate.wgtmode_template'') != ''cool'')  ))
        or


        (states(''sensor.betriebsart_wgt'') == ''4'' and states(''climate.wgtmode_template'')
        != ''auto'' )  }}'
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.betriebsart_wgt
      below: 1
    then:
    - service: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: 'off'
      target:
        entity_id: climate.wgtmode_template
  - if:
    - condition: numeric_state
      entity_id: sensor.betriebsart_wgt
      below: 4
      above: 2
    then:
    - service: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: fan_only
      target:
        entity_id: climate.wgtmode_template
  - if:
    - condition: numeric_state
      entity_id: sensor.betriebsart_wgt
      below: 3
      above: 1
    then:
    - service: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: heat
      target:
        entity_id: climate.wgtmode_template
  - if:
    - condition: numeric_state
      entity_id: sensor.betriebsart_wgt
      above: 3
    then:
    - service: climate.set_hvac_mode
      metadata: {}
      data:
        hvac_mode: auto
      target:
        entity_id: climate.wgtmode_template
  mode: single
- id: '1733170085023'
  alias: Prevent Kühlschrank from OFF
  description: ''
  triggers:
  - seconds: '30'
    trigger: time_pattern
  conditions:
  - condition: device
    type: is_off
    device_id: bc2325c10edce6d5480fca12778e70e4
    entity_id: 9864ad8023597e71d21b0dfb0ca31ed4
    domain: switch
  actions:
  - type: turn_on
    device_id: bc2325c10edce6d5480fca12778e70e4
    entity_id: 9864ad8023597e71d21b0dfb0ca31ed4
    domain: switch
  mode: parallel
  max: 10
- id: '1735476152143'
  alias: Waschmaschine
  description: Monitoring der Waschmaschine
  use_blueprint:
    path: leofabri/appliance-status-monitor.yaml
    input:
      automation_self_trigger: input_boolean.waschmaschine_automation_self_trigger
      appliance_socket: switch.shelly_em_wasch
      appliance_power_sensor: sensor.waschmaschine_power
      appliance_finishing_power_threshold: 1
      appliance_starting_power_threshold: 30
      actions_job_cycle_ends:
      - action: notify.mobile_app_riphone15
        metadata: {}
        data:
          message: Waschmaschine fertig
      delayed_job_completion_duration: 301
      actions_new_job_cycle_begins: []
      delayed_job_completion_timer: timer.waschmaschine_delayed_job_completion_timer
      appliance_job_cycle: input_boolean.waschmaschine_job_cycle
      appliance_state_machine: input_select.waschmaschine_state_machine
- id: '1735744081129'
  alias: Spülmaschine
  description: ''
  use_blueprint:
    path: leofabri/appliance-status-monitor.yaml
    input:
      automation_self_trigger: input_boolean.spulmschine_automation_self_trigger
      appliance_socket: switch.std_spulmaschine
      appliance_power_sensor: sensor.std_spulmaschine_leistung
      appliance_starting_power_threshold: 10
      appliance_state_machine: input_select.spulmaschine_state_machine
      appliance_job_cycle: input_boolean.spulmaschine_job_cycle
      delayed_job_completion_timer: timer.spulmschine_delayed_job_completion_timer
      delayed_job_completion_duration: 60
