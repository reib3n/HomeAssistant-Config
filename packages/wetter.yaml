# packages/wetter.yaml
# -------------------------------------------------------------------
# Package: Wetter
# Ziel: Struktur & Wartbarkeit verbessern – ohne Funktions- oder ID-Änderungen
# -------------------------------------------------------------------

# 1) WEATHER-INTEGRATION
# >>> PASTE: BEGIN weather <<<
# weather:
#   # <-- Hier deinen vorhandenen weather:-Block einfügen (unverändert)
# >>> PASTE: END weather <<<

# 2) TEMPLATE-SENSOREN (aufgeteilt in zwei Blöcke)

# ---------------------- BLOCK 1: HOURLY FORECAST ----------------------
template:
  - trigger:
      # alle 30 Minuten
      - trigger: time_pattern
        minutes: "/30"
      # zusätzlich nach HA-Start
      - trigger: homeassistant
        event: start

    action:
      - action: weather.get_forecasts
        data:
          type: hourly
        target:
          entity_id: weather.freudenstadt
        response_variable: forecast_data

    sensor:
      - name: "Forecast (4h) Temperature"
        unique_id: forecast_4h_temperature
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 6 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[6].temperature
             | float(default=unknown) }}
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement

      - name: "Forecast (4h) Condition"
        unique_id: forecast_4h_condition
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 6 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[6].condition | default('unknown') }}

      - name: "Forecast (4h) Wind Speed"
        unique_id: forecast_4h_wind_speed
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 6 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[6].wind_speed
             | float(default=unknown) }}
        unit_of_measurement: "m/s"
        device_class: wind_speed
        state_class: measurement

      - name: "Forecast (4h) Wind Gust Speed"
        unique_id: forecast_4h_wind_gust_speed
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 6 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[6].wind_gust_speed
             | float(default=unknown) }}
        unit_of_measurement: "m/s"
        device_class: wind_speed
        state_class: measurement

      - name: "Forecast (4h) Precipitation"
        unique_id: forecast_4h_precipitation
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 6 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[6].precipitation
             | float(default=unknown) }}
        unit_of_measurement: "mm"
        state_class: measurement

      - name: "Forecast (4h) Timestamp"
        unique_id: forecast_4h_timestamp
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 6 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[6].datetime | as_datetime | as_local }}

      # -------- 8h --------
      - name: "Forecast (8h) Temperature"
        unique_id: forecast_8h_temperature
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 10 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[10].temperature
             | float(default=unknown) }}
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement

      - name: "Forecast (8h) Condition"
        unique_id: forecast_8h_condition
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 10 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[10].condition | default('unknown') }}

      - name: "Forecast (8h) Wind Speed"
        unique_id: forecast_8h_wind_speed
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 10 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[10].wind_speed
             | float(default=unknown) }}
        unit_of_measurement: "m/s"
        device_class: wind_speed
        state_class: measurement

      - name: "Forecast (8h) Wind Gust Speed"
        unique_id: forecast_8h_wind_gust_speed
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 10 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[10].wind_gust_speed
             | float(default=unknown) }}
        unit_of_measurement: "m/s"
        device_class: wind_speed
        state_class: measurement

      - name: "Forecast (8h) Precipitation"
        unique_id: forecast_8h_precipitation
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 10 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[10].precipitation
             | float(default=unknown) }}
        unit_of_measurement: "mm"
        state_class: measurement

      - name: "Forecast (8h) Timestamp"
        unique_id: forecast_8h_timestamp
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 10 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[10].datetime | as_datetime | as_local }}

      # -------- 12h --------
      - name: "Forecast (12h) Temperature"
        unique_id: forecast_12h_temperature
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 14 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[14].temperature
             | float(default=unknown) }}
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement

      - name: "Forecast (12h) Condition"
        unique_id: forecast_12h_condition
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 14 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[14].condition | default('unknown') }}

      - name: "Forecast (12h) Wind Speed"
        unique_id: forecast_12h_wind_speed
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 14 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[14].wind_speed
             | float(default=unknown) }}
        unit_of_measurement: "m/s"
        device_class: wind_speed
        state_class: measurement

      - name: "Forecast (12h) Wind Gust Speed"
        unique_id: forecast_12h_wind_gust_speed
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 14 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[14].wind_gust_speed
             | float(default=unknown) }}
        unit_of_measurement: "m/s"
        device_class: wind_speed
        state_class: measurement

      - name: "Forecast (12h) Precipitation"
        unique_id: forecast_12h_precipitation
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 14 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[14].precipitation
             | float(default=unknown) }}
        unit_of_measurement: "mm"
        state_class: measurement

      - name: "Forecast (12h) Timestamp"
        unique_id: forecast_12h_timestamp
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 14 }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[14].datetime | as_datetime | as_local }}

  # ---------------------- BLOCK 2: DAILY FORECAST ----------------------
  - trigger:
      # alle 3 Stunden zur vollen Stunde
      - trigger: time_pattern
        hours: "/3"
        minutes: "0"
      # zusätzlich nach HA-Start
      - trigger: homeassistant
        event: start

    action:
      - action: weather.get_forecasts
        data:
          type: daily
        target:
          entity_id: weather.freudenstadt
        response_variable: forecast_data

    sensor:
      - name: "Forecast Weather Max Temp today"
        unique_id: forecast_weather_max_temp_today
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 0
             and (forecast_data['weather.freudenstadt'].forecast[0].temperature is defined) }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[0].temperature
             | float(default=unknown) }}
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement

      - name: "Forecast Weather Min Temp today"
        unique_id: forecast_weather_min_temp_today
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 0
             and (forecast_data['weather.freudenstadt'].forecast[0].templow is defined) }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[0].templow
             | float(default=unknown) }}
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement

      - name: "Forecast Weather Wind today"
        unique_id: forecast_weather_wind_today
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 0
             and (forecast_data['weather.freudenstadt'].forecast[0].wind_speed is defined) }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[0].wind_speed
             | float(default=unknown) }}
        unit_of_measurement: "m/s"
        device_class: wind_speed
        state_class: measurement

      - name: "Forecast Weather Regen today"
        unique_id: forecast_weather_regen_today
        availability: >
          {{ forecast_data is defined
             and forecast_data['weather.freudenstadt'] is defined
             and (forecast_data['weather.freudenstadt'].forecast | length) > 0
             and (forecast_data['weather.freudenstadt'].forecast[0].precipitation is defined) }}
        state: >
          {{ forecast_data['weather.freudenstadt'].forecast[0].precipitation
             | float(default=unknown) }}
        unit_of_measurement: "mm"
        state_class: measurement
# 3) AUTOMATIONEN/SKRIPTE NUR FÜRS WETTER
# >>> PASTE: BEGIN automations_and_scripts <<<
# # <-- Hier deine bisherigen Wetter-Automationen/Skripte einfügen (unverändert)
# >>> PASTE: END automations_and_scripts <<<

# 4) OPTIONALE HELFER NUR FÜRS WETTER
# >>> PASTE: BEGIN helpers <<<
# # <-- Optionale wetterbezogene Helpers (unverändert)
# >>> PASTE: END helpers <<<

# 5) OPTIONALES CUSTOMIZE NUR FÜR WETTER-ENTITÄTEN
# >>> PASTE: BEGIN customize <<<
# # <-- Optionale Customize-Einträge für Wetter (unverändert)
# >>> PASTE: END customize <<<
