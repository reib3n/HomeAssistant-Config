esphome:
  name: "esp-eink-eg-diele"
  friendly_name: "esp-eink-eg-diele"
  on_boot:
    priority: 200.0
    then:
      - delay: 10s
      - component.update: eink_display

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "p8NdKM2B3kH4ASNjawnEUo+nUQ6k20V1Y8Y4/u1/+7o="

ota:
  - platform: esphome
    password: "b8c22fe3b23e480d00ca5f61f8c7d294"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Tsp-Display-Eg Fallback Hotspot"
    password: "EZbTvo3CaHuz"

captive_portal:
#bluetooth_proxy:

#------------------------------------------------------------------
button:
  - platform: shutdown
    name: "eInk-EG-Diele - Shutdown"
  - platform: restart
    name: "eInk-EG-Diele - Restart"
  - platform: template
    name: "eInk-EG-Diele - Refresh Screen"
    entity_category: config
    on_press:
      - component.update: eink_display

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      - seconds: 0
        minutes: 2
        then:
           - component.update: eink_display
      - seconds: 0
        minutes: 32
        then:
           - component.update: eink_display

sun:
  latitude: 48.4706479째
  longitude: 8.4824076째

# Include custom fonts
font:
  - file: 'fonts/GothamRnd-Book.ttf'
    id: font_10_book
    size: 10
  - file: 'fonts/GothamRnd-Book.ttf'
    id: font_16_book
    size: 16
  - file: 'fonts/GothamRnd-Book.ttf'
    id: font_18_book
    size: 18
  - file: 'fonts/GothamRnd-Book.ttf'
    id: font_30_book
    size: 30
  - file: 'fonts/GothamRnd-Book.ttf'
    id: font_54_book
    size: 54
  - file: 'fonts/GothamRnd-Bold.ttf'
    id: font_large_bold
    size: 54
  - file: 'fonts/GothamRnd-Bold.ttf'
    id: font_medium_bold
    size: 18

  # Include Material Design Icons font
  # Thanks to https://community.home-assistant.io/t/display-materialdesign-icons-on-esphome-attached-to-screen/199790/16
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_150_mdi
    size: 150
    glyphs: &mdi-weather-glyphs
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0F2F" # mdi-weather-cloudy-alert
      - "\U000F0E6E" # mdi-weather-cloudy-arrow-right
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0592" # mdi-weather-hail
      - "\U000F0F30" # mdi-weather-hazy
      - "\U000F0898" # mdi-weather-hurricane
      - "\U000F0593" # mdi-weather-lightning
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F0594" # mdi-weather-night
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F32" # mdi-weather-partly-lightning
      - "\U000F0F33" # mdi-weather-partly-rainy
      - "\U000F0F34" # mdi-weather-partly-snowy
      - "\U000F0F35" # mdi-weather-partly-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F0F36" # mdi-weather-snowy-heavy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0F37" # mdi-weather-sunny-alert
      - "\U000F14E4" # mdi-weather-sunny-off
      - "\U000F059A" # mdi-weather-sunset
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F0F38" # mdi-weather-tornado
      - "\U000F059D" # mdi-weather-windy
      - "\U000F059E" # mdi-weather-windy-variant
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_100_mdi
    size: 100
    glyphs: *mdi-weather-glyphs
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_54_mdi
    size: 54
    glyphs:
      - "\U000F058E" # mdi-water-percent
      - "\U000F050F" # mdi-thermometer
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_22_mdi
    size: 22
    glyphs:
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F050F" # mdi-thermometer
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F059D" # mdi-weather-windy
      - "\U000F0F38" # mdi-weather-tornado

sensor:
  # Create sensors for monitoring remotely.
  - platform: template
    name: "eInk-EG-Diele - Display Last Update"
    device_class: timestamp
    entity_category: "diagnostic"
    id: display_last_update
  
  - platform: wifi_signal
    name: "eInk-EG-Diele - WiFi Signal Strength"
    id: wifisignal
    unit_of_measurement: "dBm"
    entity_category: "diagnostic"
    update_interval: 60s

  - platform: homeassistant
    entity_id: sensor.temp_aussen_low
    id: out_temp

  - platform: homeassistant
    entity_id: sensor.ads_wetterhum
    id: out_hum

  - platform: homeassistant
    entity_id: sensor.freudenst_uv_index
    id: out_uv


text_sensor:
  - platform: homeassistant
    entity_id: sensor.weekday_german
    id: weekday
  - platform: homeassistant
    entity_id: sensor.date_german
    id: date

  - platform: homeassistant
    entity_id: weather.freudenst
    id: weather_condition_now

  - platform: sun
    id: next_sunrise
    type: sunrise

  - platform: sun
    id: next_sunset
    type: sunset

  - platform: homeassistant
    entity_id: sensor.forecast_4h_timestamp
    id: forecast_4h_timestamp

  - platform: homeassistant
    entity_id: sensor.forecast_4h_condition
    id: forecast_4h_condition

  - platform: homeassistant
    entity_id: sensor.forecast_4h_temperature
    id: forecast_4h_temp

  - platform: homeassistant
    entity_id: sensor.forecast_4h_precipitation
    id: forecast_4h_precipitation

  - platform: homeassistant
    entity_id: sensor.forecast_4h_wind_speed
    id: forecast_4h_wind_speed

  - platform: homeassistant
    entity_id: sensor.forecast_4h_wind_gust_speed
    id: forecast_4h_wind_gust_speed


  - platform: homeassistant
    entity_id: sensor.forecast_8h_timestamp
    id: forecast_8h_timestamp

  - platform: homeassistant
    entity_id: sensor.forecast_8h_condition
    id: forecast_8h_condition

  - platform: homeassistant
    entity_id: sensor.forecast_8h_temperature
    id: forecast_8h_temp

  - platform: homeassistant
    entity_id: sensor.forecast_8h_precipitation
    id: forecast_8h_precipitation

  - platform: homeassistant
    entity_id: sensor.forecast_8h_wind_speed
    id: forecast_8h_wind_speed

  - platform: homeassistant
    entity_id: sensor.forecast_8h_wind_gust_speed
    id: forecast_8h_wind_gust_speed


  - platform: homeassistant
    entity_id: sensor.forecast_12h_timestamp
    id: forecast_12h_timestamp

  - platform: homeassistant
    entity_id: sensor.forecast_12h_condition
    id: forecast_12h_condition

  - platform: homeassistant
    entity_id: sensor.forecast_12h_temperature
    id: forecast_12h_temp

  - platform: homeassistant
    entity_id: sensor.forecast_12h_precipitation
    id: forecast_12h_precipitation

  - platform: homeassistant
    entity_id: sensor.forecast_12h_wind_speed
    id: forecast_12h_wind_speed

  - platform: homeassistant
    entity_id: sensor.forecast_12h_wind_gust_speed
    id: forecast_12h_wind_gust_speed

# Pins for Waveshare ePaper ESP Board
spi:
  clk_pin: GPIO13
  mosi_pin: GPIO14

# Now render everything on the ePaper screen.
display:
  - platform: waveshare_epaper
    id: eink_display
    cs_pin: GPIO15
    dc_pin: GPIO27
    busy_pin: GPIO25
    reset_pin: GPIO26
    model: 7.50inV2
    reset_duration: 2ms
    update_interval: never
    rotation: 90째
    lambda: |-

      it.fill(COLOR_ON);

      // Map weather states to MDI characters.
      std::map<std::string, std::string> weather_icon_map
        {
          {"cloudy", "\U000F0590"},
          {"cloudy-alert", "\U000F0F2F"},
          {"cloudy-arrow-right", "\U000F0E6E"},
          {"fog", "\U000F0591"},
          {"hail", "\U000F0592"},
          {"hazy", "\U000F0F30"},
          {"hurricane", "\U000F0898"},
          {"lightning", "\U000F0593"},
          {"lightning-rainy", "\U000F067E"},
          {"night", "\U000F0594"},
          {"night-partly-cloudy", "\U000F0F31"},
          {"partlycloudy", "\U000F0595"},
          {"partly-lightning", "\U000F0F32"},
          {"partly-rainy", "\U000F0F33"},
          {"partly-snowy", "\U000F0F34"},
          {"partly-snowy-rainy", "\U000F0F35"},
          {"pouring", "\U000F0596"},
          {"rainy", "\U000F0597"},
          {"snowy", "\U000F0598"},
          {"snowy-heavy", "\U000F0F36"},
          {"snowy-rainy", "\U000F067F"},
          {"sunny", "\U000F0599"},
          {"sunny-alert", "\U000F0F37"},
          {"sunny-off", "\U000F14E4"},
          {"sunset", "\U000F059A"},
          {"sunset-down", "\U000F059B"},
          {"sunset-up", "\U000F059C"},
          {"tornado", "\U000F0F38"},
          {"windy", "\U000F059D"},
          {"windy-variant", "\U000F059E"},
        };
      
        //Date
        it.printf(240, 30, id(font_medium_bold), COLOR_OFF , TextAlign::TOP_CENTER, id(date).state.c_str());
        it.printf(240, 60, id(font_large_bold), COLOR_OFF , TextAlign::TOP_CENTER, id(weekday).state.c_str());

        //it.rectangle(35, 140, 150, 150);
        it.printf(35, 140, id(font_150_mdi), COLOR_OFF , "%s", weather_icon_map[id(weather_condition_now).state.c_str()].c_str());
        
        //Temperatur
        it.printf(250, 155, id(font_54_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F050F");
        it.printf(280, 155, id(font_large_bold), COLOR_OFF , "%2.0f째C", id(out_temp).state);
        //Feuchtigkeit
        it.printf(250, 225, id(font_54_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F058E");
        it.printf(280, 225, id(font_54_book), COLOR_OFF , "%2.0f%%", id(out_hum).state);

        //UV Index
        it.printf(80, 290, id(font_18_book), COLOR_OFF , "UV: %2.0f", id(out_uv).state);

        //Sunrise & Sunset
        it.printf(250, 287, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F059C");
        it.printf(263, 290, id(font_18_book), COLOR_OFF , id(next_sunrise).state.substr(0,5).c_str());

        it.printf(345, 287, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F059B");
        it.printf(357, 290, id(font_18_book), COLOR_OFF , id(next_sunset).state.substr(0,5).c_str());

        //Spacer
        it.line(20,320,460,320, COLOR_OFF);

        it.printf(240, 340, id(font_30_book), COLOR_OFF , TextAlign::TOP_CENTER, "Vorhersage");



        //4h Ahead Weather
        it.printf(105, 390, id(font_medium_bold), COLOR_OFF , TextAlign::TOP_CENTER, "%s Uhr", id(forecast_4h_timestamp).state.substr(11,2).c_str());
        it.printf(105, 410, id(font_100_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "%s", weather_icon_map[id(forecast_4h_condition).state.c_str()].c_str());

        it.printf(65, 518, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F050F");
        it.printf(80, 522, id(font_16_book), COLOR_OFF , "%s째C", id(forecast_4h_temp).state.c_str());

        it.printf(65, 543, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F0596");
        it.printf(80, 547, id(font_16_book), COLOR_OFF , "%s mm", id(forecast_4h_precipitation).state.c_str());

        it.printf(65, 568, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F059D");
        it.printf(80, 572, id(font_16_book), COLOR_OFF , "%s km/h", id(forecast_4h_wind_speed).state.c_str());

        it.printf(65, 593, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F0F38");
        it.printf(80, 597, id(font_16_book), COLOR_OFF , "%s km/h", id(forecast_4h_wind_gust_speed).state.c_str());



        //8h Ahead Weather
        it.printf(240, 390, id(font_medium_bold), COLOR_OFF , TextAlign::TOP_CENTER, "%s Uhr", id(forecast_8h_timestamp).state.substr(11,2).c_str());
        it.printf(240, 410, id(font_100_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "%s", weather_icon_map[id(forecast_8h_condition).state.c_str()].c_str());

        it.printf(200, 518, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F050F");
        it.printf(215, 522, id(font_16_book), COLOR_OFF , "%s째C", id(forecast_8h_temp).state.c_str());

        it.printf(200, 543, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F0596");
        it.printf(215, 547, id(font_16_book), COLOR_OFF , "%s mm", id(forecast_8h_precipitation).state.c_str());

        it.printf(200, 568, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F059D");
        it.printf(215, 572, id(font_16_book), COLOR_OFF , "%s km/h", id(forecast_8h_wind_speed).state.c_str());

        it.printf(200, 593, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F0F38");
        it.printf(215, 597, id(font_16_book), COLOR_OFF , "%s km/h", id(forecast_8h_wind_gust_speed).state.c_str());



        //12h Ahead Weather
        it.printf(375, 390, id(font_medium_bold), COLOR_OFF , TextAlign::TOP_CENTER, "%s Uhr", id(forecast_12h_timestamp).state.substr(11,2).c_str());
        it.printf(375, 410, id(font_100_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "%s", weather_icon_map[id(forecast_12h_condition).state.c_str()].c_str());

        it.printf(335, 518, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F050F");
        it.printf(350, 522, id(font_16_book), COLOR_OFF , "%s째C", id(forecast_12h_temp).state.c_str());

        it.printf(335, 543, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F0596");
        it.printf(350, 547, id(font_16_book), COLOR_OFF , "%s mm", id(forecast_12h_precipitation).state.c_str());

        it.printf(335, 568, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F059D");
        it.printf(350, 572, id(font_16_book), COLOR_OFF , "%s km/h", id(forecast_12h_wind_speed).state.c_str());

        it.printf(335, 593, id(font_22_mdi), COLOR_OFF , TextAlign::TOP_CENTER, "\U000F0F38");
        it.printf(350, 597, id(font_16_book), COLOR_OFF , "%s km/h", id(forecast_12h_wind_gust_speed).state.c_str());

        //Spacer
        it.line(20,635,460,635, COLOR_OFF);

        // Refresh Timestamp
        // Code by EnsconcE from https://community.home-assistant.io/t/esphome-show-time/348903
        char str[17];
        time_t currTime = id(homeassistant_time).now().timestamp;
        strftime(str, sizeof(str), "%H:%M", localtime(&currTime));
        it.printf(240, 770, id(font_10_book), COLOR_OFF , TextAlign::TOP_CENTER, "Letzte Aktualisierung %s", str);
